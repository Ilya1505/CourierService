name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: 
          - "5432:5432"
        env: 
          POSTGRES_DB: courier_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 111
    env:
      POSTGRES_DB: courier_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 111
      RAILS_ENV: tests
      DATABASE_URL: "postgres://postgres:111@localhost:5432/courier_db"
      POSTGRES_DB_TEST: courier_db
      POSTGRES_USER_TEST: postgres
      POSTGRES_PASSWORD_TEST: 111
      POSTGRES_HOST_TEST: localhost
      POSTGRES_PORT_TEST: 5432
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install python
      uses: actions/setup-python@v1
      with:
           python-version: '3.11'
           architecture: 'x64'
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Upgrade DB
      run: alembic upgrade head
    - name: Run tests
      run: pytest
  deploy:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Install Ruby and gems
          uses: actions/setup-python@v1
          with:
            python-version: '3.11'
            architecture: 'x64'
        - name: Run command on remote server
          uses: D3rHase/ssh-command-action@v0.2.2
          with:
            host: 90.188.20.234
            user: root
            private_key: b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZWQyNTUxOQAAACBU0D0U1xY3PfT2WhEMXmC/HRtj07mIDigu72QAI8TG7QAAAKCIacZDiGnGQwAAAAtzc2gtZWQyNTUxOQAAACBU0D0U1xY3PfT2WhEMXmC/HRtj07mIDigu72QAI8TG7QAAAEDtRxiOZ0hkaivhrEHa92jQSX1YtrVV48PlMsfNh5Lao1TQPRTXFjc99PZaEQxeYL8dG2PTuYgOKC7vZAAjxMbtAAAAHGRhbmlsLnN0b2xwb3Zza2lraEBnbWFpbC5jb20B
              docker-compose --file docker-compose.prod.yml down;
              docker-compose --file docker-compose.prod.yml up -d;
              docker system prune --all --force;
