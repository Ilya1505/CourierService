name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: 
          - "5432:5432"
        env: 
          POSTGRES_DB: courier_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 111
    env:
      POSTGRES_DB: courier_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 111
      RAILS_ENV: tests
      DATABASE_URL: "postgres://postgres:111@localhost:5432/courier_db"
      POSTGRES_DB_TEST: courier_db
      POSTGRES_USER_TEST: postgres
      POSTGRES_PASSWORD_TEST: 111
      POSTGRES_HOST_TEST: localhost
      POSTGRES_PORT_TEST: 5432
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install python
      uses: actions/setup-python@v1
      with:
           python-version: '3.11'
           architecture: 'x64'
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Upgrade DB
      run: alembic upgrade head
    - name: Run tests
      run: pytest
  deploy:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Install Ruby and gems
          uses: actions/setup-python@v1
          with:
            python-version: '3.11'
            architecture: 'x64'
        - name: Run command on remote server
          uses: D3rHase/ssh-command-action@v0.2.2
          with:
            host: 172.20.0.1
            user: root
            private_key: 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
              cd ${{ secrets.PROJECT_FOLDER }};
              git checkout main;
              git pull;
              docker-compose --file docker-compose.prod.yml down;
              docker-compose --file docker-compose.prod.yml up -d;
              docker system prune --all --force;
