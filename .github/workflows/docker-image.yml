name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: 
          - "5432:5432"
        env: 
          POSTGRES_DB: courier_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 111
    env:
      POSTGRES_DB: courier_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 111
      RAILS_ENV: tests
      DATABASE_URL: "postgres://postgres:111@localhost:5432/courier_db"
      POSTGRES_DB_TEST: courier_db
      POSTGRES_USER_TEST: postgres
      POSTGRES_PASSWORD_TEST: 111
      POSTGRES_HOST_TEST: localhost
      POSTGRES_PORT_TEST: 5432
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install python
      uses: actions/setup-python@v1
      with:
           python-version: '3.11'
           architecture: 'x64'
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Upgrade DB
      run: alembic upgrade head
    - name: Run tests
      run: pytest
  deploy:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Install Ruby and gems
          uses: actions/setup-python@v1
          with:
            python-version: '3.11'
            architecture: 'x64'
        - name: Run command on remote server
          uses: D3rHase/ssh-command-action@v0.2.2
          with:
            host: 172.25.112.1
            user: root
            private_key: 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
            command: |
              cd ${{ secrets.PROJECT_FOLDER }};
              git checkout main;
              git pull;
              docker-compose --file docker-compose.prod.yml down;
              docker-compose --file docker-compose.prod.yml up -d;
              docker system prune --all --force;
